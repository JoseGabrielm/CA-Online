{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Tools/city.pipe.ts","webpack:///./src/app/Tools/city.service.ts","webpack:///./src/app/api/api.module.ts","webpack:///./src/app/api/interceptor/interceptor.module.ts","webpack:///./src/app/api/services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-admin.guard.ts","webpack:///./src/app/auth/auth-applicator.guard.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/guest.guard.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/logout/logout.component.css","webpack:///./src/app/auth/logout/logout.component.html","webpack:///./src/app/auth/logout/logout.component.ts","webpack:///./src/app/auth/register/register.component.css","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/auth/services/login.service.ts","webpack:///./src/app/auth/services/register.service.ts","webpack:///./src/app/dashboard/dashboard-admin/dashboard-admin.component.css","webpack:///./src/app/dashboard/dashboard-admin/dashboard-admin.component.html","webpack:///./src/app/dashboard/dashboard-admin/dashboard-admin.component.ts","webpack:///./src/app/dashboard/dashboard-applicator/dashboard-applicator.component.css","webpack:///./src/app/dashboard/dashboard-applicator/dashboard-applicator.component.html","webpack:///./src/app/dashboard/dashboard-applicator/dashboard-applicator.component.ts","webpack:///./src/app/dashboard/dashboard-user/dados/dados.component.css","webpack:///./src/app/dashboard/dashboard-user/dados/dados.component.html","webpack:///./src/app/dashboard/dashboard-user/dados/dados.component.ts","webpack:///./src/app/dashboard/dashboard-user/dashboard-user.component.css","webpack:///./src/app/dashboard/dashboard-user/dashboard-user.component.html","webpack:///./src/app/dashboard/dashboard-user/dashboard-user.component.ts","webpack:///./src/app/dashboard/dashboard-user/historico/historico.component.css","webpack:///./src/app/dashboard/dashboard-user/historico/historico.component.html","webpack:///./src/app/dashboard/dashboard-user/historico/historico.component.ts","webpack:///./src/app/dashboard/dashboard-user/minha-carterinha/minha-carterinha.component.css","webpack:///./src/app/dashboard/dashboard-user/minha-carterinha/minha-carterinha.component.html","webpack:///./src/app/dashboard/dashboard-user/minha-carterinha/minha-carterinha.component.ts","webpack:///./src/app/dashboard/dashboard-user/services/historico.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/design/e-header/e-header-title/e-header-title.component.ts","webpack:///./src/app/design/e-header/e-header.component.css","webpack:///./src/app/design/e-header/e-header.component.html","webpack:///./src/app/design/e-header/e-header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/routes/main-routes/main-routes.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Estado, CityService, Cidade } from './city.service';\r\n\r\n@Pipe({\r\n  name: 'filterByState'\r\n})\r\nexport class CityPipe implements PipeTransform {\r\n\r\n  transform(cidades: Cidade[],EstadoID: string) {\r\n    if(cidades)\r\n    return cidades.filter(cidade => cidade.Estado == EstadoID);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as api from '../api/api.module';\r\n\r\nexport interface Estado{\r\n  ID:string,\r\n  Nome:string,\r\n  Sigla:string\r\n}\r\n\r\nexport interface Cidade{\r\n  ID:string,\r\n  Nome:string,\r\n  Estado:string\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CityService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  getEstados() : Observable<Estado[]> { \r\n    return this.http.get<Estado[]>(api.API_DEFAULT_URL + 'data/Estados.json');\r\n  }\r\n  getCidades() : Observable<Cidade[]>{\r\n    return this.http.get<Cidade[]>(api.API_DEFAULT_URL + 'data/Cidades.json');\r\n\r\n  }\r\n}\r\n","\r\nexport const API_BASE_URL:string = 'http://localhost:8000/api/';\r\nexport const API_DEFAULT_URL:string = 'http://localhost:8000/';\r\n\r\n","\r\nimport { Injectable, NgModule } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Meta } from '@angular/platform-browser';\r\n\r\n@Injectable()\r\n\r\nexport class HttpsRequestInterceptor implements HttpInterceptor {\r\n\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler,\r\n  ): Observable<HttpEvent<any>> {\r\n    const token = this.meta.getTag('name=csrf-token').content;\r\n    let token2 = 'NOT FOUND';\r\n    if (localStorage.getItem('token')) {\r\n       token2 = 'Bearer '+ localStorage.getItem('token');\r\n    }\r\n\r\n    const dupReq = req.clone({\r\n\r\n      headers: req.headers.set('X-Csrf-Token', token).\r\n                set('Authorization', token2)\r\n              \r\n    });\r\n    return next.handle(dupReq);\r\n  }\r\n\r\n  constructor(private meta: Meta) {\r\n\r\n  }\r\n}\r\n\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpsRequestInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\n\r\n\r\nexport class InterceptorModule {\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { API_BASE_URL } from '../api.module';\r\n\r\n\r\nexport interface UserModel{\r\n  id,\r\n  name,\r\n  email,\r\n  password,\r\n  cpf,\r\n  nivel_acesso,\r\n  data_nascimento,\r\n  id_cidade,\r\n  id_estado,\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getUser() : Observable<UserModel>{\r\n    return this.http.get<UserModel>(API_BASE_URL+'user');\r\n  }\r\n}\r\n","module.exports = \".fill-remaining-space {\\r\\n   /*This fills the remaining space, by using flexbox.  \\r\\n  Every toolbar row uses a flexbox row layout. */\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.nav{\\r\\n    color:white;\\r\\n    \\r\\n    /* background-color: rgba(0, 128, 0, 0.753); */\\r\\n    background-color: #00d1b2;\\r\\n    box-shadow: 0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12);\\r\\n    height: auto;\\r\\n    text-transform: uppercase;\\r\\n    font-size: 18px;\\r\\n    letter-spacing: .3px;\\r\\n}\\r\\n\\r\\n.active{\\r\\n  /* /  box-shadow: 0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12); */\\r\\n   padding:1em;\\r\\n    background-color:rgba(0, 0, 0, 0.473);\\r\\n    border-bottom: 0.1em solid black;\\r\\n}\\r\\n\\r\\n.footer{\\r\\n\\r\\n\\r\\n    background-color:#00d1b2bb;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<mat-toolbar class='nav' color=\\\"primary\\\">\\r\\n    <div >\\r\\n\\r\\n        <button  routerLinkActive=\\\"active\\\"  mat-button routerLink=\\\"/home\\\" style=\\\"margin-top:5px\\\">\\r\\n            <!-- <mat-icon>home</mat-icon>  -->\\r\\n            <img width=\\\"60px\\\" height=\\\"60px\\\" src='imagens/logo.png'>\\r\\n            <h3> \\r\\n                {{title}}\\r\\n            </h3>\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <span class=\\\"fill-remaining-space\\\"></span>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxHide fxShow.gt-sm>\\r\\n        <div *ngIf=\\\"loginService.loggedIn|async ; else loggedOut\\\" >\\r\\n            <button mat-button routerLink=\\\"/logout\\\"> Sair </button>\\r\\n            <button mat-button routerLink=\\\"/dashboard\\\"> Dashboard </button>\\r\\n\\r\\n        </div>\\r\\n        <ng-template #loggedOut>\\r\\n                <button  routerLinkActive=\\\"active\\\" mat-button routerLink=\\\"/login\\\"> Login </button>\\r\\n            \\r\\n                <button  routerLinkActive=\\\"active\\\" mat-button routerLink=\\\"/register\\\"> Registrar </button>             \\r\\n        </ng-template>\\r\\n\\r\\n    </div>     \\r\\n  \\r\\n<!-- \\r\\n        <button mat-button routerLink=\\\"/login\\\">Entrar</button>\\r\\n  \\r\\n        <button mat-button routerLink=\\\"/dashboard\\\">Dashboard</button> -->\\r\\n    <button mat-button [mat-menu-trigger-for]=\\\"menu\\\" fxShow fxHide.gt-sm>\\r\\n     <mat-icon>menu</mat-icon>\\r\\n    </button>\\r\\n\\r\\n</mat-toolbar>\\r\\n<mat-menu x-position=\\\"before\\\" #menu>\\r\\n    <!-- <button mat-menu-item routerLink=\\\"/login\\\">Entrar</button>\\r\\n    <button mat-menu-item routerLink=\\\"/dashboard\\\">Dashboard</button> -->\\r\\n\\r\\n</mat-menu>\\r\\n\\r\\n<router-outlet>\\r\\n    \\r\\n</router-outlet>\\r\\n<ngx-loading-bar></ngx-loading-bar>\\r\\n<link href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" rel=\\\"stylesheet\\\">\\r\\n<mat-toolbar class='footer' color=\\\"primary\\\"></mat-toolbar>\"","import { Component } from '@angular/core';\r\nimport { LoginService } from './auth/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'CA Online';\r\n\r\n  constructor(private loginService:LoginService) { \r\n    \r\n  }\r\n\r\n  ngOnInit(){\r\n    this.loginService.isLoggedIn();\r\n    \r\n  }\r\n\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { MainRoutesModule } from  './routes/main-routes/main-routes.module';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { RegisterComponent } from './auth/register/register.component'\r\n\r\nimport { MaterialModule } from './material/material.module'\r\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\r\n\r\nimport { EHeaderComponent } from './design/e-header/e-header.component';\r\nimport { EHeaderTitleComponent } from './design/e-header/e-header-title/e-header-title.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { NgxUiLoaderModule } from  'ngx-ui-loader';\r\nimport { CityPipe } from './Tools/city.pipe';\r\nimport { InterceptorModule } from './api/interceptor/interceptor.module';\r\nimport { LogoutComponent } from './auth/logout/logout.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { DashboardAdminComponent } from './dashboard/dashboard-admin/dashboard-admin.component';\r\nimport { DashboardApplicatorComponent } from './dashboard/dashboard-applicator/dashboard-applicator.component';\r\nimport { DashboardUserComponent } from './dashboard/dashboard-user/dashboard-user.component';\r\nimport { MinhaCarterinhaComponent } from './dashboard/dashboard-user/minha-carterinha/minha-carterinha.component';\r\nimport { HistoricoComponent } from './dashboard/dashboard-user/historico/historico.component';\r\nimport { DadosComponent } from './dashboard/dashboard-user/dados/dados.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    \r\n    EHeaderComponent,\r\n    EHeaderTitleComponent,\r\n    PageNotFoundComponent,\r\n    CityPipe,\r\n    LogoutComponent,\r\n    DashboardComponent,\r\n    DashboardAdminComponent,\r\n    DashboardApplicatorComponent,\r\n    DashboardUserComponent,\r\n    MinhaCarterinhaComponent,\r\n    HistoricoComponent,\r\n    DadosComponent,\r\n],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MainRoutesModule,\r\n    MaterialModule,\r\n    LoadingBarRouterModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxUiLoaderModule,\r\n    InterceptorModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { \r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService,UserModel } from '../api/services/user.service';\r\nimport { finalize,map } from 'rxjs/operators';\r\nimport { HttpBackend } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthAdminGuard implements CanActivate {\r\n\r\n  constructor(private userService:UserService){}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.check();\r\n  }\r\n\r\n  check() :Observable<boolean> {\r\n    \r\n    return this.userService.getUser().pipe(map(data => data.nivel_acesso == 2));\r\n    \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../api/services/user.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthApplicatorGuard implements CanActivate {\r\n  constructor(private userService:UserService){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.check();\r\n  }\r\n\r\n  check()\r\n{  return this.userService.getUser().pipe(map(data => data.nivel_acesso == 1));\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private loginService:LoginService,\r\n              private router:Router){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    \r\n      return this.check();\r\n  }\r\n\r\n  check(){\r\n\r\n    if(this.loginService.isLoggedIn()) return true;\r\n    this.router.navigate(['/login']);\r\n\r\n    return false;\r\n  }\r\n\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GuestGuard implements CanActivate {\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.check();\r\n  }\r\n\r\n  constructor(private loginService:LoginService,\r\n    private router:Router){}\r\n\r\n    check() {\r\n      if( this.loginService.isLoggedIn())\r\n        {\r\n          this.router.navigate(['/dashboard']);\r\n\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","module.exports = \"\\r\\n.login-form{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n\\r\\n}\\r\\n.login-full-width{\\r\\n\\r\\n    width: 100%;\\r\\n}\\r\\n.login-content-lg{\\r\\n    margin: 20px;\\r\\n\\r\\n    margin-right: 400px;\\r\\n    margin-left: 400px;\\r\\n\\r\\n}\"","module.exports = \"<app-e-header>\\r\\n    <app-e-header-title>Entrar</app-e-header-title>\\r\\n</app-e-header>\\r\\n<mat-sidenav-container  [ngClass.lg]=\\\"'login-content-lg'\\\" class=\\\"example-container\\\">\\r\\n\\r\\n\\r\\n    <div >\\r\\n        <mat-card>\\r\\n            <mat-error *ngIf=\\\"formSubmitError.length > 0\\\">\\r\\n                {{formSubmitError}}\\r\\n            </mat-error>\\r\\n            <mat-card-title></mat-card-title>\\r\\n            <mat-card-subtitle>Preencha as lacunas abaixo para acessar sua carteira online de vacinação</mat-card-subtitle>\\r\\n            <form class=\\\"login-form\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"loginForm\\\" #formDir=\\\"ngForm\\\">\\r\\n                <mat-form-field class=\\\"login-full-width\\\">\\r\\n                    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                    <mat-hint>Errors appear instantly!</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"email.hasError('email') && !email.hasError('required')\\\">\\r\\n                        Please enter a valid email address\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"email.hasError('required')\\\">\\r\\n                        Email is <strong>required</strong>\\r\\n                    </mat-error>\\r\\n\\r\\n                </mat-form-field>\\r\\n\\r\\n\\r\\n                <mat-form-field class=\\\"login-full-width\\\">\\r\\n                    <input matInput placeholder=\\\"Senha\\\" formControlName=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n                    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n\\r\\n                    <mat-hint>Errors appear instantly!</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"password.hasError('email') && !password.hasError('required')\\\">\\r\\n                        Please enter a valid password address\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"password.hasError('required')\\\">\\r\\n                        Password is <strong>required</strong>\\r\\n                    </mat-error>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-grid-list cols=\\\"3\\\">\\r\\n                    <mat-grid-tile>\\r\\n\\r\\n                        <button [disabled]=\\\"loginForm.invalid\\\" type='submit' mat-raised-button color=\\\"primary\\\">Entrar</button>\\r\\n                    </mat-grid-tile>\\r\\n                    <mat-grid-tile>\\r\\n                        <button routerLink='/home' mat-raised-button color=\\\"accent\\\">Esqueci Minha senha</button>\\r\\n                    </mat-grid-tile>\\r\\n\\r\\n                </mat-grid-list>\\r\\n\\r\\n            </form>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroupDirective, NgForm, Validators, FormGroup } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { LoginService } from '../services/login.service'\r\nimport { Login } from '../services/login'\r\n\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader'; // Import NgxUiLoaderService\r\nimport { Router } from '@angular/router';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nclass MyErrorStateMatcher implements ErrorStateMatcher {\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n        const isSubmitted = form && form.submitted;\r\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n    }\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\r\n    tt : Observable<number>;\r\n    hide = true;\r\n    loginForm: FormGroup;\r\n    LoginData: Login;\r\n    error: string;\r\n    formSubmitError: string;\r\n    constructor(private service: LoginService,\r\n        private ngxService: NgxUiLoaderService,\r\n        private router:Router) {\r\n    }\r\n    ngOnInit(): void {\r\n        \r\n        this.formSubmitError = \"\";\r\n        this.LoginData = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n        this.loginForm = new FormGroup({\r\n\r\n            'email': new FormControl('vitor@vitor.com', [\r\n                Validators.required,\r\n                Validators.email,\r\n            ]),\r\n            'password': new FormControl('123456789', [\r\n                Validators.required\r\n            ]),\r\n        });\r\n    }\r\n    get email() { return this.loginForm.get('email'); }\r\n\r\n    get password() { return this.loginForm.get('password'); }\r\n\r\n\r\n    matcher = new MyErrorStateMatcher();\r\n\r\n    loginSucessful() {\r\n\r\n    }\r\n    loginUnauthorized() {\r\n        this.formSubmitError = \"Email ou senha incorretos\";\r\n    }\r\n    onDestroy(){\r\n        console.log('destroy);')\r\n    }\r\n    onSubmit() {\r\n        this.ngxService.start(); // start foreground loading with 'default' id\r\n        this.LoginData = {\r\n            email: this.email.value,\r\n            password: this.password.value\r\n        };\r\n        this.service.doLogin(this.LoginData).subscribe(\r\n            data => {\r\n                console.log(data);\r\n                localStorage.setItem('token', data['token']);\r\n\r\n                this.service.isLoggedIn();\r\n     \r\n                timer(0,1000*60).subscribe(\r\n                    function(){\r\n                        this.loginService.logout()\r\n                        .pipe(finalize(() => {\r\n                            localStorage.removeItem('token');\r\n                            \r\n                            this.loginService.isLoggedIn();\r\n                        } ));\r\n                    }                   \r\n                );\r\n                this.router.navigate(['/dashboard']);\r\n\r\n            },\r\n            error => {\r\n                this.error = error;\r\n                switch (error.status) {\r\n                    case 401:\r\n                        this.loginUnauthorized();\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        );\r\n\r\n        this.ngxService.stop();\r\n\r\n        // TODO: Use EventEmitter with form value\r\n\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-e-header>\\r\\n  <app-e-header-title>Sair</app-e-header-title>\\r\\n</app-e-header>\\r\\n<mat-sidenav-container class=\\\"example-container\\\">\\r\\n\\r\\n\\r\\n  <div [ngClass.lg]=\\\"'login-content-lg'\\\">\\r\\n      <mat-card>\\r\\n        \\r\\n          <mat-card-content>\\r\\n\\r\\n            <div *ngIf='logoutMsg.length>0'>\\r\\n                <h3> {{logoutMsg}}</h3>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n          \\r\\n      </mat-card>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport {map, finalize} from 'rxjs/operators';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n\r\n  constructor(private loginService: LoginService) { }\r\n  loginObs:Subscription;\r\n  logoutMsg='';\r\n  ngOnInit() {\r\n    this.loginObs = this.loginService.logout()\r\n    .pipe(finalize(() => {\r\n        localStorage.removeItem('token');\r\n        \r\n        this.loginService.isLoggedIn();\r\n    } )).\r\n  \r\n    subscribe(\r\n\r\n      data => {\r\n        console.log('logout ok');\r\n        this.logoutMsg = data['message'];\r\n  //      localStorage.removeItem('token'); \r\n //       this.loginService.isLoggedIn();\r\n\r\n        },\r\n      errors => {\r\n        this.logoutMsg = errors['error']['message'];\r\n  //      localStorage.removeItem('token');\r\n   //     this.loginService.isLoggedIn();\r\n\r\n\r\n//        console.error('logout error: ' + errors);\r\n      },\r\n      function(){\r\n\r\n      }\r\n      \r\n    );\r\n\r\n\r\n  }\r\n  ngOnDestroy(){\r\n\r\n    this.loginObs.unsubscribe();\r\n\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".login-form{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n\\r\\n}\\r\\n.login-full-width{\\r\\n\\r\\n    width: 100%;\\r\\n}\\r\\n.login-content-lg{\\r\\n    margin: 20px;\\r\\n\\r\\n     margin-right: 400px;\\r\\n    margin-left: 400px;\\r\\n\\r\\n}\"","module.exports = \"<app-e-header>\\r\\n    <app-e-header-title>\\r\\n        Criar conta\\r\\n    </app-e-header-title>\\r\\n\\r\\n</app-e-header>\\r\\n<mat-sidenav-container  [ngClass.lg]=\\\"'login-content-lg'\\\" class=\\\"example-container\\\">\\r\\n    <div >\\r\\n        <mat-card>\\r\\n            <mat-card-title></mat-card-title>\\r\\n            <mat-card-subtitle>Preencha as lacunas abaixo para criar sua carteira online de vacinação</mat-card-subtitle>\\r\\n            <form class=\\\"login-form\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"registerForm\\\" #formDir=\\\"ngForm\\\">\\r\\n            \\r\\n                <div *ngIf='errors'>\\r\\n                    <mat-error *ngFor=\\\"let error of errors\\\"> \\r\\n                            {{error}}\\r\\n                        </mat-error>\\r\\n                </div>\\r\\n     \\r\\n                <mat-form-field class=\\\"login-full-width\\\">\\r\\n                    <input matInput placeholder=\\\"Nome\\\" formControlName=\\\"name\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                    <mat-hint>Errors appear instantly!</mat-hint>\\r\\n           \\r\\n                    <mat-error *ngIf=\\\"name.hasError('required')\\\">\\r\\n                        Email is <strong>required</strong>\\r\\n                    </mat-error>\\r\\n\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"login-full-width\\\">\\r\\n                    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" [errorStateMatcher]=\\\"matcher\\\">\\r\\n                    <mat-hint>Errors appear instantly!</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"email.hasError('email') && !email.hasError('required')\\\">\\r\\n                        Please enter a valid email address\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"email.hasError('required')\\\">\\r\\n                        Email is <strong>required</strong>\\r\\n                    </mat-error>\\r\\n\\r\\n                </mat-form-field>\\r\\n\\r\\n                <div formGroupName=\\\"passGroup\\\">\\r\\n\\r\\n                    <mat-form-field class=\\\"login-full-width\\\">\\r\\n                        <input matInput placeholder=\\\"Senha\\\" formControlName=\\\"password\\\" [errorStateMatcher]=\\\"matcher\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n                        <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n\\r\\n                        <mat-hint>Errors appear instantly!</mat-hint>\\r\\n\\r\\n                        <mat-error *ngIf=\\\"password.hasError('required')\\\">\\r\\n                            Password is <strong>required</strong>\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"login-full-width\\\">\\r\\n                        <input matInput placeholder=\\\"Confirmar Senha\\\" formControlName=\\\"confirmPassword\\\" [errorStateMatcher]=\\\"matcher\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\r\\n                        <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n\\r\\n                        <mat-hint>Errors appear instantly!</mat-hint>\\r\\n\\r\\n                        <mat-error *ngIf=\\\"confirmPassword.hasError('required')\\\">\\r\\n                            Password is <strong>required</strong>\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"confirmPassword.hasError('MatchPassword')\\\">\\r\\n                            Password doesnt <strong>match</strong>\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <mat-form-field>\\r\\n                    <input formControlName='data' placeholder=\\\"Data de nascimento\\\" matInput [matDatepicker]=\\\"myDatepicker\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #myDatepicker></mat-datepicker>\\r\\n                    <!-- <mat-hint>Data de nascimento!</mat-hint> -->\\r\\n\\r\\n                </mat-form-field>\\r\\n                <div>\\r\\n\\r\\n                    <mat-form-field>\\r\\n                        <mat-select  formControlName='estado' placeholder='Estado'>\\r\\n                            <mat-option *ngFor=\\\"let estado of estados | async\\\" value=\\\"{{estado['ID']}}\\\">{{estado['Nome']}}</mat-option>\\r\\n\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field>\\r\\n                        <mat-select formControlName='cidade' placeholder='Cidade' >\\r\\n                    \\r\\n                            <div *ngIf='currentEstadoID.length > 0'>\\r\\n\\r\\n                                <mat-option *ngFor=\\\"let cidade of cidades | async |  filterByState: currentEstadoID\\\" value=\\\"{{cidade['ID']}}\\\">{{cidade['Nome']}}</mat-option>\\r\\n                            </div>    \\r\\n\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <mat-grid-list cols=\\\"4\\\">\\r\\n                    <mat-grid-tile>\\r\\n                        <button [disabled]=\\\"registerForm.invalid\\\" type='submit' mat-raised-button color=\\\"primary\\\">Criar</button>\\r\\n                    </mat-grid-tile>\\r\\n\\r\\n\\r\\n                </mat-grid-list>\\r\\n\\r\\n            </form>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n\\r\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective, NgForm, ValidatorFn, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Cidade, CityService, Estado } from '../../Tools/city.service';\r\nimport { Register, RegisterService } from '../services/register.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nclass MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  hide = true;\r\n  registerForm: FormGroup;\r\n\r\n\r\n  cidades: Observable<Cidade[]>;\r\n  currentEstadoID: string ;\r\n  estados: Observable<Estado[]>;\r\n  matcher = new MyErrorStateMatcher();\r\n  errors:Array<string>;\r\n  done:Array<string>;\r\n  constructor(private cityService: CityService,\r\n    private registerService: RegisterService) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.currentEstadoID = '2';\r\n    this.estados = this.cityService.getEstados();\r\n    this.cidades = this.cityService.getCidades();\r\n\r\n    this.registerForm = new FormGroup({\r\n      'name' : new FormControl('vitor', [Validators.required]),\r\n      'email': new FormControl('vitor@vitor.com', [\r\n        Validators.required,\r\n        Validators.email,\r\n      ]),\r\n      'passGroup': new FormGroup({\r\n        'password': new FormControl('123456789', [\r\n          Validators.required\r\n        ]),\r\n        'confirmPassword': new FormControl('123456789', [\r\n          Validators.required,\r\n        ])\r\n      }, [this.MatchPassword]),\r\n      'estado': new FormControl('2', [Validators.required]),\r\n      'cidade': new FormControl('3', [Validators.required]),\r\n      'data': new FormControl('10-10-2000', [\r\n        Validators.required\r\n      ]),\r\n    });\r\n\r\n    this.onChanges();\r\n  }\r\n  get email() { return this.registerForm.get('email'); }\r\n\r\n  get password() { return this.registerForm.get('passGroup.password'); }\r\n  get confirmPassword() { return this.registerForm.get('passGroup.confirmPassword'); }\r\n  get estado() { return this.registerForm.get('estado'); }\r\n  get cidade() { return this.registerForm.get('cidade'); }\r\n  get data() { return this.registerForm.get('data'); }\r\nget name()  { return this.registerForm.get('name');}\r\n\r\n  MatchPassword(AC: FormGroup): ValidatorFn {\r\n\r\n    let password = AC.get('password').value; // to get value in input tag\r\n    let confirmPassword = AC.get('confirmPassword').value; // to get value in input tag\r\n\r\n    if (password !== confirmPassword) {\r\n      AC.get('confirmPassword').setErrors({ MatchPassword: true });\r\n\r\n    } else {\r\n\r\n      return null\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    let registerParams: Register = {\r\n      name: this.name.value,\r\n      email: this.email.value,\r\n      password: this.password.value,\r\n      data_nascimento: this.data.value,\r\n      id_cidade: this.cidade.value,\r\n      id_estado: this.estado.value\r\n    }\r\n    this.registerService.doRegister(registerParams).subscribe(\r\n      res => { \r\n        this.done=Object.values( res);\r\n\r\n      },\r\n      errors => {\r\n        console.log(errors.error);\r\n        this.errors=Object.values( errors.error);\r\n  \r\n       }\r\n    );\r\n  }\r\n\r\n  onChanges() {\r\n    this.estado.valueChanges.subscribe(val => {\r\n      this.currentEstadoID = val;\r\n    })\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport * as api from '../../api/api.module';\r\nimport { Login } from './login';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LoginService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  private _loggedIn: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  public loggedIn: Observable<boolean> = this._loggedIn.asObservable();\r\n\r\n  doLogin(login: Login): Observable<Login> {\r\n\r\n    return this.http.post<Login>(api.API_BASE_URL + 'login', login);\r\n  }\r\n\r\n  // logout()  : Observable<any> {\r\n  //   return this.http.post<any>(api.API_BASE_URL + 'auth/logout','');\r\n  // }\r\n\r\n  logout() : Observable<string> {\r\n\r\n    return this.http.post<string>(api.API_BASE_URL + 'logout', null);\r\n  }\r\n  isLoggedIn() {\r\n    let token = localStorage.getItem('token');\r\n\r\n    if (token) { //essa atribuição é feita para atualizar a variavel e o resto do sistema ser notificado\r\n      this._loggedIn.next(true);\r\n    \r\n    } else {\r\n      this._loggedIn.next(false);\r\n    }\r\n\r\n    return this._loggedIn.getValue();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as api from '../../api/api.module';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nexport interface Register{\r\n  email:string,\r\n  password:string,\r\n  id_cidade:string,\r\n  id_estado:string,\r\n  data_nascimento:string,\r\n  name:string\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n\r\n  doRegister(params:Register) : Observable<Register>{\r\n    return this.http.post<Register>(api.API_BASE_URL + 'register', params);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  dashboard-admin works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-admin',\r\n  templateUrl: './dashboard-admin.component.html',\r\n  styleUrls: ['./dashboard-admin.component.css']\r\n})\r\nexport class DashboardAdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  dashboard-applicator works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-applicator',\r\n  templateUrl: './dashboard-applicator.component.html',\r\n  styleUrls: ['./dashboard-applicator.component.css']\r\n})\r\nexport class DashboardApplicatorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  dados works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dados',\r\n  templateUrl: './dados.component.html',\r\n  styleUrls: ['./dados.component.css']\r\n})\r\nexport class DadosComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".sidemenu{\\r\\n    background-color: antiquewhite;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.example-container-user {\\r\\n    margin: 2em\\r\\n\\r\\n  }\\r\\n\\r\\n.example-container {\\r\\n    width: auto;\\r\\n    height: 30em;\\r\\n    margin:1em;\\r\\n  }\\r\\n\"","module.exports = \"<mat-drawer-container class=\\\"example-container\\\">\\r\\n    <mat-drawer mode=\\\"side\\\" opened>\\r\\n\\r\\n        <div class='sidemenu'>\\r\\n\\r\\n            <mat-list>\\r\\n\\r\\n              <mat-list-item> \\r\\n                \\r\\n                  <button mat-raised-button routerLink=\\\"/dashboard/user/minha-carterinha\\\">Minha carterinha</button> \\r\\n                </mat-list-item>\\r\\n              <mat-list-item> \\r\\n                  <button  mat-raised-button routerLink=\\\"/dashboard/user/historico\\\">Historico </button> \\r\\n  \\r\\n              </mat-list-item>\\r\\n              <mat-list-item> \\r\\n                  <button  mat-raised-button routerLink=\\\"/dashboard/user/dados\\\">Meus dados</button> \\r\\n\\r\\n              </mat-list-item>\\r\\n            </mat-list>\\r\\n    \\r\\n          </div>\\r\\n\\r\\n    </mat-drawer>\\r\\n    \\r\\n    <mat-drawer-content>\\r\\n      <div class='example-container-user'>\\r\\n        <router-outlet></router-outlet>\\r\\n        \\r\\n      </div>\\r\\n    </mat-drawer-content>\\r\\n  </mat-drawer-container>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard-user',\r\n  templateUrl: './dashboard-user.component.html',\r\n  styleUrls: ['./dashboard-user.component.css']\r\n})\r\nexport class DashboardUserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n  historico works!\\r\\n\\r\\n  {{historicoData|async}}\\r\\n  <div *ngFor='let historico of historicoData|async'>\\r\\n    {{historico['id_vacina']}}\\r\\n  </div>\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"historicoData\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n  \\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"vacina\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Vacina </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.vacina.name}} </td>\\r\\n    </ng-container>\\r\\n  \\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"aplicador\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Aplicador  </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.aplicador.registro.name}} </td>\\r\\n    </ng-container>\\r\\n  \\r\\n    <!-- Weight Column -->\\r\\n    <ng-container matColumnDef=\\\"posto\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Posto </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.aplicador.posto.endereco}} </td>\\r\\n    </ng-container>\\r\\n  \\r\\n    <!-- Symbol Column -->\\r\\n    <ng-container matColumnDef=\\\"created_at\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Data </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.created_at}} </td>\\r\\n    </ng-container>\\r\\n  \\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HistoricoService, historicoIn } from '../services/historico.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-historico',\r\n  templateUrl: './historico.component.html',\r\n  styleUrls: ['./historico.component.css']\r\n})\r\nexport class HistoricoComponent implements OnInit {\r\n\r\n  constructor(private hService:HistoricoService) { }\r\n  historicoData : Observable<historicoIn>;\r\n  displayedColumns: string[] = ['vacina', 'aplicador', 'posto', 'created_at'];\r\n\r\n  ngOnInit() {\r\n    this.historicoData=this.hService.get();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  minha-carterinha works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-minha-carterinha',\r\n  templateUrl: './minha-carterinha.component.html',\r\n  styleUrls: ['./minha-carterinha.component.css']\r\n})\r\nexport class MinhaCarterinhaComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { API_BASE_URL } from '../../../api/api.module';\nimport {PostoIn} from '../../../api/services/posto.service'\nimport {VacinaIn} from '../../../api/services/vacina.service'\nimport {AplicadorIn} from '../../../api/services/aplicador.service'\nexport interface historicoIn{\n   aplicador:AplicadorIn,\n   vacina:VacinaIn,\n   created_at  ,\n   updated_at  \n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoricoService {\n\n  constructor(private http:HttpClient) { }\n\n  get(){\n    return this.http.get<historicoIn>(API_BASE_URL + 'historico');\n  }\n}\n","module.exports = \".sidemenu{\\r\\n\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n    width: auto;\\r\\n    height: 30em;\\r\\n  }\"","module.exports = \"<app-e-header>\\r\\n  <app-e-header-title>\\r\\n\\r\\n    \\r\\n    <p style='color:black;margin:1em'>\\r\\n      Aqui podera ver todos os seus dados, tais comos postos frequentados, carteirinha de vacinação,etc\\r\\n    </p>\\r\\n  </app-e-header-title>\\r\\n</app-e-header>\\r\\n\\r\\n  <router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService, UserModel } from '../api/services/user.service';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { Router, Event, NavigationEnd, Route, NavigationStart } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService,\r\n    private router: Router) { }\r\n  user: Observable<UserModel>;\r\n\r\n  ev: Subscription;\r\n    usersubs:Subscription;\r\nredirect(){\r\n  this.usersubs= this.user.subscribe(\r\n    data => { \r\n      if(this.router.url=== '/dashboard' ){\r\n\r\n        if (data.nivel_acesso == 2)\r\n        this.router.navigate(['dashboard', 'admin']);\r\n        else if (data.nivel_acesso == 1)\r\n        this.router.navigate(['dashboard', 'applicator']);\r\n        \r\n        else {\r\n          this.router.navigate(['dashboard', 'user']);\r\n          \r\n        }\r\n      }\r\n    },\r\n    errors =>{\r\n      console.error(errors);\r\n    }\r\n  );\r\n}\r\n  ngOnInit() {\r\n    this.user = this.userService.getUser();\r\n    this.ev = this.router.events\r\n      .subscribe((e: Event) => {\r\n        if (e instanceof NavigationEnd) {\r\n          let url = e.urlAfterRedirects || e.url;\r\n          if (url === '/dashboard') {\r\n\r\n\r\n            this.redirect();\r\n          }\r\n        }\r\n      },\r\n      errors =>{\r\n        console.error(errors);\r\n      });\r\n\r\n\r\n\r\n    if(this.user)\r\n    this.redirect();\r\n\r\n  }\r\n  OnDestroy(){\r\n    this.usersubs.unsubscribe();\r\n    this.ev.unsubscribe();\r\n\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-e-header-title',\r\n  template: `\r\n    <p class='e-header-title'>\r\n        <ng-content></ng-content>\r\n    </p>\r\n  `,\r\n  styles: [\r\n`\r\n\r\n.e-header-title{\r\n  \r\n    margin:0;\r\n    padding:0;\r\n    color:white;\r\n    padding:1em;\r\n}\r\n\r\n`\r\n\r\n  ]\r\n})\r\nexport class EHeaderTitleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n.e-header\\r\\n{\\r\\n    /* background-color: rgba(0, 128, 0, 0.753); */\\r\\n    background-color: #00d1b2;\\r\\n    margin:1em;\\r\\n}\"","module.exports = \"<div class='e-header'>\\r\\n\\r\\n    <ng-content></ng-content>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-e-header',\r\n  templateUrl: './e-header.component.html',\r\n  styleUrls: ['./e-header.component.css']\r\n})\r\nexport class EHeaderComponent implements OnInit {\r\n \r\n  constructor() { \r\n\r\n    \r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-e-header>\\r\\n    <app-e-header-title>\\r\\n        <div >\\r\\n            <h1>\\r\\n\\r\\n                Carteira de Vacinação Online\\r\\n            </h1>\\r\\n            <h2 style='font-size: 18px;\\r\\n                        font-weight: 300;\\r\\n                        line-height: 28px;'>\\r\\n                Saia do passado, tenha acesso a sua carterinha de vacinação a qualquer monento!\\r\\n            </h2>\\r\\n\\r\\n\\r\\n            <button mat-raised-button routerLink='/login'> Começar a aventura!</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n    </app-e-header-title>\\r\\n\\r\\n\\r\\n\\r\\n</app-e-header>\\r\\n<mat-sidenav-container class=\\\"example-container\\\">\\r\\n\\r\\n    <mat-grid-list class='gtile ' [cols]=\\\"columnNum\\\"  gutterSize='2em'>\\r\\n        <mat-grid-tile>\\r\\n\\r\\n            <img src='/imagens/o-medico-de-ontem-de-hoje-e-do-futuro-media.png'>\\r\\n        </mat-grid-tile>\\r\\n\\r\\n        <mat-grid-tile>\\r\\n                <mat-card class='home-content'>\\r\\n\\r\\n                    <mat-card-content>\\r\\n\\r\\n                        \\r\\n                        \\r\\n                        \\r\\n                        Perdeu a carterinha de vacinação e precisa tomar a vacina da febre amarela? A orientação da Anvisa (Agência Nacional de Vigilância\\r\\n                        Sanitária) é que a pessoa entre em contato com o local onde foi realizada a vacinação para o resgate\\r\\n                        da 2ª via. Em caso de dúvida ou impossibilidade de adquirir a carteira de vacinação, vale procurar\\r\\n                        o Programa Nacional de Imunização/ Ministério da Saúde. Esse setor é o responsável para avaliação\\r\\n                        e encaminhamento dos questionamentos das atividades de vacinação das unidades de saúde. Muita gente\\r\\n                        também não se lembra se já tomou ou não a vacina da febre amarela. Na dúvida, a recomendação é se\\r\\n                        imunizar novamente. Vale destacar que a campanha de febre amarela é preventiva e voltada aos moradores\\r\\n                        da zona norte de São Paulo. A ação começou no dia 21 de outubro, após um macaco ser encontrado morto\\r\\n                        no Horto Florestal vítima de febre amarela. Dose única para toda a vida A vacina contra a febre amarela\\r\\n                        é a melhor forma de se prevenir da doença, e uma única dose é o suficiente para se proteger por toda\\r\\n                        a vida. Mas nem todos devem tomar. O imunizante não é indicado para gestantes, mulheres amamentando\\r\\n                        crianças com até 6 meses e pessoas imunodeprimidas, como pacientes em tratamento quimioterápico,\\r\\n                        radioterápico ou com corticoides em doses elevadas (portadores de Lúpus, por exemplo). Mais de 500\\r\\n                        mil se imunizaram Na quarta-feira (1º), a meta da primeira etapa da campanha, que era de vacinar\\r\\n                        moradores da região do entorno dos parques do Horto, Cantareira e Anhanguera, foi batida. Somente\\r\\n                        na quinta-feira (2), feriado de Finados, 34.222 pessoas se vacinaram nas 37 UBSs (Unidades Básicas\\r\\n                        de Saúde), que atenderam até as 14h. Até agora, 539.949 moradores da zona norte foram vacinados,\\r\\n                        segundo a secretaria de saúde. Vale ressaltar que as ações de rotina — vacinação para pessoas que\\r\\n                        precisam viajar para áreas de risco, seguem nos demais postos da cidade. Veja a lista completa aqui\\r\\n                    </mat-card-content>\\r\\n                    \\r\\n                </mat-card>\\r\\n                \\r\\n            </mat-grid-tile>\\r\\n                \\r\\n                \\r\\n                <mat-grid-tile>\\r\\n            <mat-card class='home-content'>\\r\\n                <mat-card-content>\\r\\n                        \\r\\n\\r\\n\\r\\n                    Perdeu a carterinha de vacinação e precisa tomar a vacina da febre amarela? A orientação da Anvisa (Agência Nacional de Vigilância\\r\\n                    Sanitária) é que a pessoa entre em contato com o local onde foi realizada a vacinação para o resgate\\r\\n                    da 2ª via. Em caso de dúvida ou impossibilidade de adquirir a carteira de vacinação, vale procurar o\\r\\n                    Programa Nacional de Imunização/ Ministério da Saúde. Esse setor é o responsável para avaliação e encaminhamento\\r\\n                    dos questionamentos das atividades de vacinação das unidades de saúde. Muita gente também não se lembra\\r\\n                    se já tomou ou não a vacina da febre amarela. Na dúvida, a recomendação é se imunizar novamente. Vale\\r\\n                    destacar que a campanha de febre amarela é preventiva e voltada aos moradores da zona norte de São Paulo.\\r\\n                    A ação começou no dia 21 de outubro, após um macaco ser encontrado morto no Horto Florestal vítima de\\r\\n                    febre amarela. Dose única para toda a vida A vacina contra a febre amarela é a melhor forma de se prevenir\\r\\n                    da doença, e uma única dose é o suficiente para se proteger por toda a vida. Mas nem todos devem tomar.\\r\\n                    O imunizante não é indicado para gestantes, mulheres amamentando crianças com até 6 meses e pessoas imunodeprimidas,\\r\\n                    como pacientes em tratamento quimioterápico, radioterápico ou com corticoides em doses elevadas (portadores\\r\\n                    de Lúpus, por exemplo). Mais de 500 mil se imunizaram Na quarta-feira (1º), a meta da primeira etapa\\r\\n                    da campanha, que era de vacinar moradores da região do entorno dos parques do Horto, Cantareira e Anhanguera,\\r\\n                    foi batida. Somente na quinta-feira (2), feriado de Finados, 34.222 pessoas se vacinaram nas 37 UBSs\\r\\n                    (Unidades Básicas de Saúde), que atenderam até as 14h. Até agora, 539.949 moradores da zona norte foram\\r\\n                    vacinados, segundo a secretaria de saúde. Vale ressaltar que as ações de rotina — vacinação para pessoas\\r\\n                    que precisam viajar para áreas de risco, seguem nos demais postos da cidade. Veja a lista completa aqui\\r\\n                </mat-card-content>\\r\\n            </mat-card>\\r\\n        </mat-grid-tile>\\r\\n\\r\\n        <mat-grid-tile>\\r\\n            \\r\\n            <img src='/imagens/o-medico-de-ontem-de-hoje-e-do-futuro-media.png'>\\r\\n        </mat-grid-tile>\\r\\n\\r\\n    </mat-grid-list>\\r\\n\\r\\n    <mat-card class='home-content'>\\r\\n\\r\\n\\r\\n        <mat-card-title>\\r\\n            Alguma coisa\\r\\n\\r\\n\\r\\n\\r\\n            <!-- This fills the remaining space of the current row -->\\r\\n        </mat-card-title>\\r\\n        <mat-card-subtitle>\\r\\n            blblavbl\\r\\n        </mat-card-subtitle>\\r\\n        <mat-card-content>\\r\\n            <div>\\r\\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\\r\\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\\r\\n                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur\\r\\n                sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\r\\n            </div>\\r\\n\\r\\n        </mat-card-content>\\r\\n\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</mat-sidenav-container>\"","module.exports = \".home-content {\\n  margin: 3em;\\n  padding: 2em; }\\n\\n.gtile {\\n  margin: 30px;\\n  margin-top: 1em; }\\n\\n:host ::ng-deep .e-header {\\n  margin: 0 !important; }\\n\\n:host ::ng-deep .e-header div {\\n    text-align: center;\\n    font-weight: 300;\\n    padding: 50px; }\\n\\n:host ::ng-deep .e-header h1 {\\n    line-height: 56px !important;\\n    font-size: 56px !important;\\n    font: 400 24px/32px Roboto,\\\"Helvetica Neue\\\",sans-serif; }\\n\\n.example-container {\\n  flex: 1 !important; }\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ObservableMedia, MediaChange } from '@angular/flex-layout';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  columnNum = 2;\r\n\r\n  constructor(media: ObservableMedia) {\r\n    media.asObservable()\r\n      .subscribe((change: MediaChange) => {\r\n        // alert(change.mqAlias);  \r\n        console.log(change.mqAlias);\r\n        if(change.mqAlias == 'xs'){\r\n          this.columnNum = 1;\r\n        }\r\n        else if(change.mqAlias == 'sm'){\r\n          this.columnNum = 1;\r\n        }\r\n        else{\r\n          this.columnNum = 2;\r\n        }\r\n      });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatListModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSidenavModule,\r\n  MatGridListModule,\r\n  MatExpansionModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatSelectModule,\r\n  MatProgressSpinnerModule,\r\n  MatTableModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatGridListModule,\r\n    MatExpansionModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSidenavModule,\r\n    MatGridListModule,\r\n    MatExpansionModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule\r\n\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  page-not-found works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from '../../auth/login/login.component'\r\nimport { RegisterComponent } from '../../auth/register/register.component'\r\nimport { AppComponent } from '../../app.component';\r\nimport { HomeComponent } from '../../home/home.component'\r\nimport { PageNotFoundComponent } from '../../page-not-found/page-not-found.component';\r\nimport { LogoutComponent } from '../../auth/logout/logout.component';\r\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\r\nimport { AuthGuard } from '../../auth/auth.guard';\r\nimport { DashboardApplicatorComponent } from '../../dashboard/dashboard-applicator/dashboard-applicator.component';\r\nimport { AuthApplicatorGuard } from '../../auth/auth-applicator.guard';\r\nimport { AuthAdminGuard } from '../../auth/auth-admin.guard';\r\nimport { DashboardAdminComponent } from '../../dashboard/dashboard-admin/dashboard-admin.component';\r\nimport { GuestGuard } from '../../auth/guest.guard';\r\nimport { DashboardUserComponent } from '../../dashboard/dashboard-user/dashboard-user.component';\r\nimport { MinhaCarterinhaComponent } from '../../dashboard/dashboard-user/minha-carterinha/minha-carterinha.component';\r\nimport { DadosComponent } from '../../dashboard/dashboard-user/dados/dados.component';\r\nimport { HistoricoComponent } from '../../dashboard/dashboard-user/historico/historico.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'login', component: LoginComponent, canActivate:[GuestGuard] },\r\n  { path: 'teste', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent, canActivate:[GuestGuard] },\r\n  { path: 'logout', component: LogoutComponent, canActivate: [AuthGuard] },\r\n  {\r\n    path: 'dashboard', component: DashboardComponent,\r\n    \r\n    canActivate: [AuthGuard],\r\n    children:\r\n    [\r\n      {\r\n        path: 'user', component: DashboardUserComponent,\r\n        children:\r\n        [\r\n          {path: 'minha-carterinha', component: MinhaCarterinhaComponent},\r\n          {path: 'dados', component: DadosComponent},\r\n          {path: 'historico', component:HistoricoComponent}\r\n\r\n        ]\r\n\r\n      },\r\n      {\r\n        path: 'applicator', component: DashboardApplicatorComponent,\r\n        canActivate: [AuthApplicatorGuard],\r\n      },\r\n      {\r\n        path: 'admin', component: DashboardAdminComponent,\r\n        canActivate: [AuthAdminGuard],\r\n      }\r\n    ]\r\n  },\r\n\r\n  { path: 'home', component: HomeComponent },\r\n\r\n  { path: '', component:HomeComponent, pathMatch: 'full' },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      appRoutes,\r\n      { enableTracing: true } // <-- debugging purposes only\r\n    )\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class MainRoutesModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}